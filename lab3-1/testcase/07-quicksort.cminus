void quicksort(int number[], int first, int last) {
    int i;
    int j;
    int pivot;
    int temp;

    if (first < last) {
        pivot = first;
        i = first;
        j = last;

        while (i < j) {
            while ((number[i] <= number[pivot]) + (i < last) == 2) {
                i = i + 1;
            }
            while (number[j] > number[pivot]) {
                j = j - 1;
            }
            if (i < j) {
                temp = number[i];
                number[i] = number[j];
                number[j] = temp;
            }
        }

        temp = number[pivot];
        number[pivot] = number[j];
        number[j] = temp;
        quicksort(number, first, j - 1);
        quicksort(number, j + 1, last);
    }
}

int main(void) {
    int i;
    int number[25];
    i = 0;
    while (i < 25) {
        number[i] = 25 - i;
        i = i + 1;
    }

    quicksort(number, 0, 24);

    i = 0;
    while (i < 25) {
        output(number[i]);
        i = i + 1;
    }
    return 0;
}
